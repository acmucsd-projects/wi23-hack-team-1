[{"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/index.js":"1","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/reportWebVitals.js":"2","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/App.js":"3","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/pages/RestaurantPage/index.jsx":"4","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/pages/ProfilePage/index.jsx":"5","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/components/Navbar/index.jsx":"6","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/components/PostImage/index.jsx":"7","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/components/StarRating/index.jsx":"8","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/api/API.js":"9","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/pages/SignupPage/index.jsx":"10","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/components/ProfileNavbar/index.jsx":"11","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/pages/Home/index.jsx":"12","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/pages/Login/index.jsx":"13","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/pages/Post/index.jsx":"14","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/components/PostCard/index.jsx":"15","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/components/Maps/index.jsx":"16"},{"size":720,"mtime":1680454444891,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1676071201541,"results":"19","hashOfConfig":"18"},{"size":1040,"mtime":1692768003914,"results":"20","hashOfConfig":"18"},{"size":4055,"mtime":1692767750493,"results":"21","hashOfConfig":"18"},{"size":4995,"mtime":1692768101571,"results":"22","hashOfConfig":"18"},{"size":1603,"mtime":1692770542233,"results":"23","hashOfConfig":"18"},{"size":994,"mtime":1680724148695,"results":"24","hashOfConfig":"18"},{"size":988,"mtime":1680765033235,"results":"25","hashOfConfig":"18"},{"size":1206,"mtime":1680724380271,"results":"26","hashOfConfig":"18"},{"size":4455,"mtime":1692769307308,"results":"27","hashOfConfig":"18"},{"size":1088,"mtime":1692770382053,"results":"28","hashOfConfig":"18"},{"size":2347,"mtime":1692771846489,"results":"29","hashOfConfig":"18"},{"size":4552,"mtime":1692769290631,"results":"30","hashOfConfig":"18"},{"size":5463,"mtime":1692763486423,"results":"31","hashOfConfig":"18"},{"size":1231,"mtime":1692772056901,"results":"32","hashOfConfig":"18"},{"size":3405,"mtime":1692775340457,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"qxcax7",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/index.js",[],["69","70"],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/reportWebVitals.js",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/App.js",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/pages/RestaurantPage/index.jsx",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/pages/ProfilePage/index.jsx",["71"],"import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport \"./style.css\";\n// Page Components\nimport StarRating from \"components/StarRating\";\nimport PostImage from \"components/PostImage\";\nimport ProfileNavbar from \"components/ProfileNavbar\";\nimport API from \"api/API\";\n// Mui Components\nimport { Autocomplete, TextField, Avatar, List,\nListItem, ListItemAvatar, ListItemText } from '@mui/material';\n\nconst ProfilePage = () => {\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [friends, setFriends] = useState([]);\n  const [allUsers, setAllUsers] = useState([]);\n  const current_user = localStorage.getItem('user');\n\n  const handleAddClick = async (user_selected) => {\n    if (user.friends.includes(user_selected.id)) {\n      return; // If the user is the current user or the user is already a friend, do nothing.\n    }\n  \n    try {\n      const updatedUser = { ...user, friends: [...user.friends, user_selected.id] };\n      const new_user = await API.updateUser(current_user, updatedUser); // Call an API to update the user's friend list in the database.\n      setFriends(new_user.data.friends);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const userResponse = await API.getUser(current_user);\n        const postResponse = await API.getPosts();\n        const allUsersResponse = await API.getUsers();\n\n        setUser(userResponse.data);\n        setPosts(postResponse.data);\n        for (let friend of userResponse.data.friends){\n            const friend_response = await API.getUser(friend);\n            setFriends(friends => friends.concat(friend_response.data));\n        }\n        setAllUsers(allUsersResponse.data.filter(user => user._id !== current_user).map(\n          user => ({ id: user._id, label: user.username })));\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setLoading(false);\n        setUser(null);\n      }\n    }\n    if (!current_user) return navigate(\"/\");\n    fetchData();\n    return () => {\n      setAllUsers([]);\n    };\n  }, []);\n\n  // Get the total number of stars for all the posts; total is the accumulator; post is object in array; 0 is initial value\n  const userPosts = posts.filter(post => post.username === user._id);\n  const totalStars = userPosts.reduce((total, post) => total + post.stars, 0);\n  return (\n    <div>\n      <ProfileNavbar />\n      <div className=\"container\">\n        <div className=\"left-side\">\n          <div className=\"user-info\">\n            {loading ? ( // check if data is still loading\n              <p>Loading user...</p>\n            ) : user ? (\n              <>\n                <Avatar sx={{width: 100, height: 100, marginRight: \"10%\"}} alt={user.username} src={user.image} />\n                <div className=\"user-details\">\n                  <h2 className=\"name\">{user.username}</h2>\n                  <Autocomplete\n                    disablePortal\n                    id=\"combo-box-demo\"\n                    options={allUsers}\n                    sx={{ width: 200 }}\n                    onChange={(event, newValue) => {\n                      handleAddClick(newValue);\n                    }}\n                    renderInput={(params) => <TextField {...params} label=\"Add Friends\" />}\n                  />\n                  <p className=\"posts\">Number of posts: {userPosts.length}</p>\n                  <StarRating totalPosts={userPosts.length} totalStars={totalStars} />\n                </div>\n              </>\n            ) : (\n              <p>No user found</p>\n            )}\n          </div>\n          <div className=\"friends-list\">\n            <h2>Friends</h2>\n            {friends.length > 0 ? (\n              <List>\n                {friends.map((friend) => {\n                  return (\n                    <ListItem key={friend._id}>\n                      <ListItemAvatar>\n                        <Avatar alt={friend.username} src={friend.image} />\n                      </ListItemAvatar>\n                      <ListItemText primary={friend.username} />\n                    </ListItem>\n                  );\n                })}\n              </List>\n            ) : (\n              <p>No friends to display</p>\n            )}\n          </div>\n        </div>\n        <div className=\"right-side\">\n          <div className=\"timeline\">\n            <h2>Timeline</h2>\n            <div className=\"post-container\">\n              {userPosts.length > 0 ? (\n                userPosts.map((post) => (\n                  <div className=\"post\" key={post._id}>\n                    <PostImage image={post.image} />\n                  </div>\n                ))\n              ) : (\n                <p>No posts to display</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/components/Navbar/index.jsx",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/components/PostImage/index.jsx",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/components/StarRating/index.jsx",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/api/API.js",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/pages/SignupPage/index.jsx",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/components/ProfileNavbar/index.jsx",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/pages/Home/index.jsx",["72"],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/pages/Login/index.jsx",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/pages/Post/index.jsx",["73","74"],"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { TextField, Button, Rating } from \"@mui/material\";\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { LoadScript, Autocomplete } from \"@react-google-maps/api\";\nimport API from \"api/API\";\nimport \"./Post.css\";\n\nrequire('dotenv').config();\nconst libraries = [\"places\"];\n\nfunction Post(){\n    const user = localStorage.getItem('user');\n    const navigate = useNavigate();\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [autocomplete, setAutocomplete] = useState(null);\n    const [location, setLocation] = useState([0, 0]);\n    const [description, setDescription] = useState(\"\");\n    const [value, setValue] = useState(0);\n    const [image, setImage] = useState(null);\n    const [title, setTitle] = useState(\"\");\n    const [review, setReview] = useState(\"\");\n    const [restaurant, setRestaurant] = useState(\"\");\n    const onLoad = (autocomplete) => setAutocomplete(autocomplete);\n    const onPlaceChanged = () => {\n      if (autocomplete !== null) {\n        setLocation([autocomplete.getPlace().geometry.location.lat(), \n        autocomplete.getPlace().geometry.location.lng()])\n        setName(autocomplete.getPlace().name);\n        setSearchQuery(autocomplete.getPlace().name);\n        setDescription(autocomplete.getPlace().formatted_address);\n      }\n    };\n    const handleFileUpload = async (e) => {\n      const file = e.target.files[0];\n      const form = new FormData();\n      form.append('image', file)\n      setImage(form);\n    };\n    useEffect(() => {\n    const handleRestaurant = async () => {\n      const restaurants = await API.getRestaurants();\n      let restaurantFound = false;\n      for (let res of restaurants.data){\n        if (res.location.latitude === location[0] && res.location.longitude === location[1]){\n            restaurantFound = true;\n            setRestaurant(res._id);\n        }\n      }\n      if (name && !restaurantFound) {\n      const restaurant_object = {\n        title: name,\n        followers: [],\n        location: {latitude: location[0], longitude: location[1]},\n        description: description\n      }\n      console.log(restaurant_object)\n      const response = await API.createRestaurant(restaurant_object);\n      setRestaurant(response.data._id);\n      }\n    }\n    if (!user) return navigate(\"/\");\n    handleRestaurant();\n  }, [name, location]);\n    const handlePost = async () => {\n        const payload = {\n          username: user,\n          restaurant: restaurant,\n          image: \"\",\n          postTitle: title,\n          review: review,\n          stars: value\n        };\n        console.log(payload)\n        const new_post = await API.createPost(payload);\n        const file_upload = await API.uploadPostImage(image, new_post.data._id);\n        navigate(\"/home\")\n    }\n    \n    return (\n        <div className=\"post_wrapper\">\n          <div className='back_button'>\n          <a href=\"/home\">\n          <ArrowBackIcon sx={{fontSize: \"3em\"}}></ArrowBackIcon>\n          </a>\n          </div>\n            <div className=\"search-group\">\n            <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API} libraries={libraries}>\n            <Autocomplete onLoad={onLoad} onPlaceChanged={onPlaceChanged}>\n              <TextField id=\"outlined-basic\" sx={{ width: \"60%\",\n               backgroundColor: \"#F5F5F5\", fontWeight: 400 }} \n              label=\"Search for restaurant\" variant=\"outlined\"\n              value={searchQuery} onChange={(e) => setSearchQuery(e.target.value)}/>\n            </Autocomplete>\n            </LoadScript>\n          </div>\n          <div className=\"image_upload\">\n            <Button variant=\"contained\" component=\"label\" sx={{ \n            width: \"60%\", \n            lineHeight: \"2.5rem\", \n            backgroundColor: \"#007AFF\",\n            textTransform: \"capitalize\",\n            fontWeight: 700}}\n            startIcon={<UploadFileIcon />}>Upload image\n            <input hidden accept=\"image/*\" multiple type=\"file\" onChange={(e) => handleFileUpload(e)}/>\n            </Button>\n          </div>\n          <div className=\"rating\">\n            <h3>Rating:</h3>\n            <Rating\n                name=\"simple-controlled\"\n                value={value}\n                precision={0.5}\n                sx = {{ fontSize: \"4rem\", color: \"#4285F4\"}}\n                onChange={(event, newValue) => {\n                    setValue(newValue);\n                }}\n            />\n          </div>\n          <div className=\"new_post_title\">\n            <TextField\n            id=\"outlined-basic\"\n            label=\"Post Title\"\n            sx={{ width: \"60%\", marginBottom: \"2%\"}}\n            onChange={e => setTitle(e.target.value)}\n            />\n          </div>\n          <div className=\"review\">\n            <TextField\n            id=\"outlined-multiline-static\"\n            label=\"Review\"\n            multiline\n            rows={4}\n            sx={{ width: \"60%\"}}\n            onChange={e => setReview(e.target.value)}\n            />\n          </div>\n          <Button variant=\"contained\" sx={{ width: \"60%\", \n          lineHeight: \"2.5rem\", \n          fontWeight: 700,\n          textTransform: \"capitalize\",\n          backgroundColor: \"#007AFF\"}\n          } onClick={handlePost}>Post</Button>\n        </div>\n    )\n}\n\nexport default Post;","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/components/PostCard/index.jsx",["75"],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/components/Maps/index.jsx",["76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":63,"column":6,"nodeType":"83","endLine":63,"endColumn":8,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":45,"column":8,"nodeType":"83","endLine":45,"endColumn":10,"suggestions":"86"},{"ruleId":"81","severity":1,"message":"87","line":66,"column":6,"nodeType":"83","endLine":66,"endColumn":22,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":78,"column":15,"nodeType":"91","messageId":"92","endLine":78,"endColumn":26},{"ruleId":"89","severity":1,"message":"93","line":2,"column":73,"nodeType":"91","messageId":"92","endLine":2,"endColumn":79},{"ruleId":"81","severity":1,"message":"94","line":43,"column":8,"nodeType":"83","endLine":43,"endColumn":24,"suggestions":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'current_user' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["98"],"React Hook useEffect has missing dependencies: 'navigate' and 'user'. Either include them or remove the dependency array.",["99"],"React Hook useEffect has missing dependencies: 'description', 'navigate', and 'user'. Either include them or remove the dependency array.",["100"],"no-unused-vars","'file_upload' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'markers'. Either include it or remove the dependency array.",["101"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [current_user, navigate]",{"range":"110","text":"111"},"Update the dependencies array to be: [navigate, user]",{"range":"112","text":"113"},"Update the dependencies array to be: [name, location, user, navigate, description]",{"range":"114","text":"115"},"Update the dependencies array to be: [markers, props.selected]",{"range":"116","text":"117"},[2245,2247],"[current_user, navigate]",[1772,1774],"[navigate, user]",[2514,2530],"[name, location, user, navigate, description]",[1247,1263],"[markers, props.selected]"]