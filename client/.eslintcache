[{"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/index.js":"1","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/reportWebVitals.js":"2","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/App.js":"3","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/Login/Login.jsx":"4","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/Post/Post.jsx":"5","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/signupPage/signupPage.jsx":"6","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/Maps/Maps.jsx":"7","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/Home/Home.jsx":"8","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/ProfilePage/index.jsx":"9","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/RestaurantPage/index.jsx":"10","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/API.js":"11","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/Navbar/index.jsx":"12","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/StarRating/index.jsx":"13","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/PostImage/index.jsx":"14"},{"size":720,"mtime":1680454444891,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1676071201541,"results":"17","hashOfConfig":"16"},{"size":1073,"mtime":1680724148694,"results":"18","hashOfConfig":"16"},{"size":4584,"mtime":1680502686510,"results":"19","hashOfConfig":"16"},{"size":5481,"mtime":1680659631688,"results":"20","hashOfConfig":"16"},{"size":4246,"mtime":1680502686512,"results":"21","hashOfConfig":"16"},{"size":2992,"mtime":1680661061676,"results":"22","hashOfConfig":"16"},{"size":3897,"mtime":1680727689456,"results":"23","hashOfConfig":"16"},{"size":5379,"mtime":1680730542902,"results":"24","hashOfConfig":"16"},{"size":4210,"mtime":1680724148696,"results":"25","hashOfConfig":"16"},{"size":1206,"mtime":1680724380271,"results":"26","hashOfConfig":"16"},{"size":1809,"mtime":1680725639590,"results":"27","hashOfConfig":"16"},{"size":808,"mtime":1680724148696,"results":"28","hashOfConfig":"16"},{"size":994,"mtime":1680724148695,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1qixqc9",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/index.js",[],["63","64"],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/reportWebVitals.js",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/App.js",["65"],"import './App.css';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Login from \"./Login/Login\";\nimport SignupPage from './signupPage/signupPage';\nimport Home from \"./Home/Home\";\nimport Post from \"./Post/Post\";\nimport ProfilePage from \"./ProfilePage\";\nimport RestaurantPage from \"./RestaurantPage\";\nimport Maps from \"./Maps/Maps\"\nrequire('dotenv').config()\n\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Routes>\n        <Route exact path=\"/register\" element={<SignupPage />} />\n        <Route exact path=\"/\" element={<Login />} />\n        <Route exact path=\"/signup\" element={<SignupPage />} />\n        <Route exact path=\"/home\" element={<Home />} />\n        <Route exact path=\"/post\" element={<Post />} />\n        <Route path={\"/profile/\" + localStorage.getItem('user')} element={<ProfilePage />} />\n        <Route path=\"/profile/:userId\" element={<ProfilePage />} />\n        <Route path=\"/restaurant/:resId\" element={<RestaurantPage />} />\n      </Routes>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/Login/Login.jsx",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/Post/Post.jsx",["66","67"],"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { TextField, Button, Rating } from \"@mui/material\";\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { LoadScript, Autocomplete } from \"@react-google-maps/api\";\nimport API from \"../API\";\nimport \"./Post.css\";\n\nrequire('dotenv').config();\nconst libraries = [\"places\"];\n\nfunction Post(){\n    const user = localStorage.getItem('user');\n    const navigate = useNavigate();\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [autocomplete, setAutocomplete] = useState(null);\n    const [location, setLocation] = useState([0, 0]);\n    const [description, setDescription] = useState(\"\");\n    const [value, setValue] = useState(0);\n    const [image, setImage] = useState(null);\n    const [title, setTitle] = useState(\"\");\n    const [review, setReview] = useState(\"\");\n    const [restaurant, setRestaurant] = useState(\"\");\n    const onLoad = (autocomplete) => setAutocomplete(autocomplete);\n    const onPlaceChanged = () => {\n      if (autocomplete !== null) {\n        setLocation([autocomplete.getPlace().geometry.location.lat(), \n        autocomplete.getPlace().geometry.location.lng()])\n        setName(autocomplete.getPlace().name);\n        setSearchQuery(autocomplete.getPlace().name);\n        setDescription(autocomplete.getPlace().formatted_address);\n      }\n    };\n    const handleFileUpload = async (e) => {\n      const file = e.target.files[0];\n      const form = new FormData();\n      form.append('image', file)\n      setImage(form);\n    };\n    useEffect(() => {\n    const handleRestaurant = async () => {\n      const restaurants = await API.getRestaurants();\n      let restaurantFound = false;\n      for (let res of restaurants.data){\n        if (res.location.latitude === location[0] && res.location.longitude === location[1]){\n            restaurantFound = true;\n            setRestaurant(res._id);\n        }\n      }\n      if (name && !restaurantFound) {\n      const restaurant_object = {\n        title: name,\n        followers: 1,\n        location: {latitude: location[0], longitude: location[1]},\n        description: description\n      }\n      console.log(restaurant_object)\n      const response = await API.createRestaurant(restaurant_object);\n      setRestaurant(response.data._id);\n      console.log(restaurant)\n      }\n    }\n    if (!user) return navigate(\"/\");\n    handleRestaurant();\n  }, [name]);\n    const handlePost = async () => {\n        const payload = {\n          username: user,\n          restaurant: restaurant,\n          image: \"\",\n          postTitle: title,\n          review: review,\n          stars: value\n        };\n        console.log(payload)\n        const new_post = await API.createPost(payload);\n        const file_upload = await API.uploadPostImage(image, new_post.data._id);\n        navigate(\"/home\")\n    }\n    \n    return (\n        <div className=\"post_wrapper\">\n          <div className='back_button'>\n          <a href=\"/home\">\n          <ArrowBackIcon sx={{fontSize: \"3em\"}}></ArrowBackIcon>\n          </a>\n          </div>\n            <div className=\"search-group\">\n            <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API} libraries={libraries}>\n            <Autocomplete onLoad={onLoad} onPlaceChanged={onPlaceChanged}>\n              <TextField id=\"outlined-basic\" sx={{ width: \"60%\",\n               backgroundColor: \"#F5F5F5\", fontWeight: 400 }} \n              label=\"Search for restaurant\" variant=\"outlined\"\n              value={searchQuery} onChange={(e) => setSearchQuery(e.target.value)}/>\n            </Autocomplete>\n            </LoadScript>\n          </div>\n          <div className=\"image_upload\">\n            <Button variant=\"contained\" component=\"label\" sx={{ \n            width: \"60%\", \n            lineHeight: \"2.5rem\", \n            backgroundColor: \"#007AFF\",\n            textTransform: \"capitalize\",\n            fontWeight: 700}}\n            startIcon={<UploadFileIcon />}>Upload image\n            <input hidden accept=\"image/*\" multiple type=\"file\" onChange={(e) => handleFileUpload(e)}/>\n            </Button>\n          </div>\n          <div className=\"rating\">\n            <h3>Rating:</h3>\n            <Rating\n                name=\"simple-controlled\"\n                value={value}\n                precision={0.5}\n                sx = {{ fontSize: \"4rem\", color: \"#4285F4\"}}\n                onChange={(event, newValue) => {\n                    setValue(newValue);\n                }}\n            />\n          </div>\n          <div className=\"new_post_title\">\n            <TextField\n            id=\"outlined-basic\"\n            label=\"Post Title\"\n            sx={{ width: \"60%\", marginBottom: \"2%\"}}\n            onChange={e => setTitle(e.target.value)}\n            />\n          </div>\n          <div className=\"review\">\n            <TextField\n            id=\"outlined-multiline-static\"\n            label=\"Review\"\n            multiline\n            rows={4}\n            sx={{ width: \"60%\"}}\n            onChange={e => setReview(e.target.value)}\n            />\n          </div>\n          <Button variant=\"contained\" sx={{ width: \"60%\", \n          lineHeight: \"2.5rem\", \n          fontWeight: 700,\n          textTransform: \"capitalize\",\n          backgroundColor: \"#007AFF\"}\n          } onClick={handlePost}>Post</Button>\n        </div>\n    )\n}\n\nexport default Post;","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/signupPage/signupPage.jsx",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/Maps/Maps.jsx",["68","69"],"import { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\"\nimport { useMemo, useState, useEffect } from \"react\";\n\n\n//does heavy lifting of talking w API\nimport usePlacesAutocomplete, {\n    getGeocode,\n    getLatLng,\n} from \"use-places-autocomplete\";\n\n//display results and read user input\nimport {\n    Combobox,\n    ComboboxInput,\n    ComboboxPopover,\n    ComboboxList,\n    ComboboxOption,\n} from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\"\n\nimport \"./Maps.css\";\n\nrequire('dotenv').config();\nconst libraries = [\"places\"];\nconst api_key = process.env.REACT_APP_GOOGLE_MAPS_API;\nconst Maps = (props) => {\n    // const center = useMemo( () => ({lat: 44, lng: -80}), []); \n    const markers = props.posts\n    const [selected, setSelected] = useState({\n        // sets latitude and longitude to first post location but defaults to UCSD\n        // if posts are empty\n        lat: 32.8801,\n        lng: -117.2340\n      });\n    useEffect(() => {\n        setSelected({lat: markers.length > 0 ? markers[props.selected-1].location.lat : 32.8801,\n            lng: markers.length > 0 ? markers[props.selected-1].location.lng : -117.2340})\n    }, [props.selected]);\n    return (\n    <LoadScript googleMapsApiKey={api_key} libraries={libraries}>\n        <div className=\"places-container\">\n                <PlacesAutocomplete setSelected={setSelected} />\n            </div>\n            <GoogleMap zoom={15} center={{lat: selected.lat, lng:selected.lng}} mapContainerClassName=\"map-container\">\n                {/* {selected && <Marker position={selected}/>} */}\n                {markers && markers.map(({ id, location }) => (\n        <Marker\n          key={id}\n          position={location}\n        ></Marker>))}\n\n            </GoogleMap>\n    </LoadScript>\n    )\n};\n\n\n//majority of work done here in the autocomplete function\nconst PlacesAutocomplete = ({ setSelected }) => {\n    const {\n        ready,\n        value,\n        setValue,\n        suggestions: {status, data},\n        clearSuggestions,\n    } = usePlacesAutocomplete();\n\n    const handleSelect = async (address) => {\n        setValue(address, false);\n        clearSuggestions();\n\n        const results = await getGeocode({address});\n        const {lat, lng} = await getLatLng(results[0]);\n        setSelected({lat, lng});\n        \n    }\n\n    return (\n        <Combobox onSelect={handleSelect}>\n            <ComboboxInput \n            value={value} \n            onChange= {(e) => setValue(e.target.value)} \n            disabled={!ready}\n            className=\"combobox-input\" \n            placeholder=\"Search an address\"\n            />\n            <ComboboxPopover>\n                <ComboboxList>\n                    {status === \"OK\" && \n                    data.map(({ place_id, description}) => (\n                        <ComboboxOption key={place_id} value = {description}/>\n                    ))}\n                </ComboboxList>\n            </ComboboxPopover>\n        </Combobox>\n        \n    );\n}\n\n\nexport default Maps;","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/Home/Home.jsx",["70"],"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from \"../Navbar\";\nimport Maps from \"../Maps/Maps\";\nimport { Card, CardActions, CardMedia, CardContent, Typography, Rating, Button } from '@mui/material';\nimport API from '../API';\nimport \"./Home.css\";\nfunction Home(){\n    const user = localStorage.getItem('user');\n    const [posts, setPosts] = useState([]);\n    const [selected, setSelected] = useState(0);\n    const handlePostClick = async (item) => {\n        setSelected(item+1);\n        console.log(selected)\n    }\n    const navigate = useNavigate();\n    useEffect(() => {\n    const handlePostDashboard = async () => {\n        const all_posts = await API.getPosts();\n        for (let post of all_posts.data){\n            if (post.username !== user){\n                const post_user = await API.getUser(post.username);\n                const post_restaurant = await API.getRestaurant(post.restaurant);\n                const post_info = {\n                    id: post._id,\n                    username: post_user.data.username,\n                    restaurant: post_restaurant.data.title,\n                    location: {lat: post_restaurant.data.location.latitude, \n                        lng: post_restaurant.data.location.longitude},\n                    image: post.image,\n                    postTitle: post.postTitle,\n                    review: post.review,\n                    stars: post.stars\n                }\n                setPosts(posts => posts.concat(post_info));\n            }\n        }\n    }\n    if (!user) return navigate(\"/\");\n    handlePostDashboard();\n    return () => {\n        setPosts([]);\n      };\n    }, []);\n    return (\n        <div className='home_page'>\n            <div className='left_home'>\n            <Navbar />\n            {posts.map((post, index) =>\n                <div className='home_posts'>\n                <Card key={post.id} sx={{ maxWidth: \"100%\", display: \"flex\" }}>\n                <CardMedia\n                sx={{ height: 205, width: \"50%\"}}\n                image={post.image}\n                />\n                    <CardContent sx={{ textAlign: \"left\"}}>\n                        <Typography gutterBottom variant=\"caption\" color=\"text.secondary\" component=\"div\">\n                            {post.restaurant}\n                        </Typography>\n                        {/* <Typography variant=\"h6\" component=\"div\" sx={{ fontWeight: \"600\", textDecoration: \"underline\"}} onClick={() => handlePostClick(index)}>\n                            {post.postTitle}\n                        </Typography> */}\n                        <Button sx={{ fontWeight: \"600\", \n                        color: \"#080808\", \n                        textAlign: \"left\",\n                        padding: \"0px\",\n                        fontSize: \"1em\"}} onClick={() => handlePostClick(index)}>\n                                {post.postTitle}\n                        </Button>\n                        <Typography variant=\"body2\" color=\"info.main\" sx={{ marginBottom: \"10%\"}}> {post.username}</Typography>\n                        <Typography variant=\"body2\">\n                        {post.review}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Rating\n                            name=\"read-only\"\n                            value={post.stars}\n                            precision={0.5}\n                            sx = {{ fontSize: \"2rem\", color: \"#4285F4\"}}\n                            readOnly\n                        />\n                    </CardActions>\n                </Card>\n                    </div>\n                )}\n            </div>      \n            <div className='map_page'>\n                <Maps posts={posts} selected={selected}/>\n            </div>\n                \n        </div>\n    )\n}\n\nexport default Home;","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/ProfilePage/index.jsx",["71","72"],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/RestaurantPage/index.jsx",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/API.js",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/Navbar/index.jsx",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/StarRating/index.jsx",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/PostImage/index.jsx",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":9,"column":8,"nodeType":"79","messageId":"80","endLine":9,"endColumn":12},{"ruleId":"81","severity":1,"message":"82","line":67,"column":6,"nodeType":"83","endLine":67,"endColumn":12,"suggestions":"84"},{"ruleId":"77","severity":1,"message":"85","line":79,"column":15,"nodeType":"79","messageId":"80","endLine":79,"endColumn":26},{"ruleId":"77","severity":1,"message":"86","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":17},{"ruleId":"81","severity":1,"message":"87","line":38,"column":8,"nodeType":"83","endLine":38,"endColumn":24,"suggestions":"88"},{"ruleId":"81","severity":1,"message":"89","line":44,"column":8,"nodeType":"83","endLine":44,"endColumn":10,"suggestions":"90"},{"ruleId":"77","severity":1,"message":"91","line":8,"column":8,"nodeType":"79","messageId":"80","endLine":8,"endColumn":12},{"ruleId":"81","severity":1,"message":"92","line":65,"column":6,"nodeType":"83","endLine":65,"endColumn":8,"suggestions":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Maps' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'description', 'location', 'navigate', 'restaurant', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["96"],"'file_upload' is assigned a value but never used.","'useMemo' is defined but never used.","React Hook useEffect has a missing dependency: 'markers'. Either include it or remove the dependency array.",["97"],"React Hook useEffect has missing dependencies: 'navigate' and 'user'. Either include them or remove the dependency array.",["98"],"'Chip' is defined but never used.","React Hook useEffect has missing dependencies: 'current_user' and 'navigate'. Either include them or remove the dependency array.",["99"],"no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [description, location, name, navigate, restaurant, user]",{"range":"108","text":"109"},"Update the dependencies array to be: [markers, props.selected]",{"range":"110","text":"111"},"Update the dependencies array to be: [navigate, user]",{"range":"112","text":"113"},"Update the dependencies array to be: [current_user, navigate]",{"range":"114","text":"115"},[2542,2548],"[description, location, name, navigate, restaurant, user]",[1156,1172],"[markers, props.selected]",[1695,1697],"[navigate, user]",[2324,2326],"[current_user, navigate]"]