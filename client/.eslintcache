[{"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/index.js":"1","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/reportWebVitals.js":"2","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/App.js":"3","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/Login/Login.jsx":"4","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/Post/Post.jsx":"5","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/signupPage/signupPage.jsx":"6","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/Maps/Maps.jsx":"7","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/Home/Home.jsx":"8","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/ProfilePage/index.jsx":"9","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/RestaurantPage/index.jsx":"10","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/API.js":"11","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/Navbar/index.jsx":"12","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/StarRating/index.jsx":"13","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/PostImage/index.jsx":"14"},{"size":720,"mtime":1680454444891,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1676071201541,"results":"17","hashOfConfig":"16"},{"size":1073,"mtime":1680724148694,"results":"18","hashOfConfig":"16"},{"size":4578,"mtime":1680766665036,"results":"19","hashOfConfig":"16"},{"size":5462,"mtime":1680807235687,"results":"20","hashOfConfig":"16"},{"size":4426,"mtime":1680766429952,"results":"21","hashOfConfig":"16"},{"size":2992,"mtime":1680661061676,"results":"22","hashOfConfig":"16"},{"size":3659,"mtime":1680807485988,"results":"23","hashOfConfig":"16"},{"size":5131,"mtime":1680765934454,"results":"24","hashOfConfig":"16"},{"size":4210,"mtime":1680724148696,"results":"25","hashOfConfig":"16"},{"size":1206,"mtime":1680724380271,"results":"26","hashOfConfig":"16"},{"size":1820,"mtime":1680767399410,"results":"27","hashOfConfig":"16"},{"size":988,"mtime":1680765033235,"results":"28","hashOfConfig":"16"},{"size":994,"mtime":1680724148695,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1qixqc9",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/index.js",[],["62","63"],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/reportWebVitals.js",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/App.js",["64"],"import './App.css';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Login from \"./Login/Login\";\nimport SignupPage from './signupPage/signupPage';\nimport Home from \"./Home/Home\";\nimport Post from \"./Post/Post\";\nimport ProfilePage from \"./ProfilePage\";\nimport RestaurantPage from \"./RestaurantPage\";\nimport Maps from \"./Maps/Maps\"\nrequire('dotenv').config()\n\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Routes>\n        <Route exact path=\"/register\" element={<SignupPage />} />\n        <Route exact path=\"/\" element={<Login />} />\n        <Route exact path=\"/signup\" element={<SignupPage />} />\n        <Route exact path=\"/home\" element={<Home />} />\n        <Route exact path=\"/post\" element={<Post />} />\n        <Route path={\"/profile/\" + localStorage.getItem('user')} element={<ProfilePage />} />\n        <Route path=\"/profile/:userId\" element={<ProfilePage />} />\n        <Route path=\"/restaurant/:resId\" element={<RestaurantPage />} />\n      </Routes>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/Login/Login.jsx",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/Post/Post.jsx",["65","66"],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/signupPage/signupPage.jsx",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/Maps/Maps.jsx",["67","68"],"import { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\"\nimport { useMemo, useState, useEffect } from \"react\";\n\n\n//does heavy lifting of talking w API\nimport usePlacesAutocomplete, {\n    getGeocode,\n    getLatLng,\n} from \"use-places-autocomplete\";\n\n//display results and read user input\nimport {\n    Combobox,\n    ComboboxInput,\n    ComboboxPopover,\n    ComboboxList,\n    ComboboxOption,\n} from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\"\n\nimport \"./Maps.css\";\n\nrequire('dotenv').config();\nconst libraries = [\"places\"];\nconst api_key = process.env.REACT_APP_GOOGLE_MAPS_API;\nconst Maps = (props) => {\n    // const center = useMemo( () => ({lat: 44, lng: -80}), []); \n    const markers = props.posts\n    const [selected, setSelected] = useState({\n        // sets latitude and longitude to first post location but defaults to UCSD\n        // if posts are empty\n        lat: 32.8801,\n        lng: -117.2340\n      });\n    useEffect(() => {\n        setSelected({lat: markers.length > 0 ? markers[props.selected-1].location.lat : 32.8801,\n            lng: markers.length > 0 ? markers[props.selected-1].location.lng : -117.2340})\n    }, [props.selected]);\n    return (\n    <LoadScript googleMapsApiKey={api_key} libraries={libraries}>\n        <div className=\"places-container\">\n                <PlacesAutocomplete setSelected={setSelected} />\n            </div>\n            <GoogleMap zoom={15} center={{lat: selected.lat, lng:selected.lng}} mapContainerClassName=\"map-container\">\n                {/* {selected && <Marker position={selected}/>} */}\n                {markers && markers.map(({ id, location }) => (\n        <Marker\n          key={id}\n          position={location}\n        ></Marker>))}\n\n            </GoogleMap>\n    </LoadScript>\n    )\n};\n\n\n//majority of work done here in the autocomplete function\nconst PlacesAutocomplete = ({ setSelected }) => {\n    const {\n        ready,\n        value,\n        setValue,\n        suggestions: {status, data},\n        clearSuggestions,\n    } = usePlacesAutocomplete();\n\n    const handleSelect = async (address) => {\n        setValue(address, false);\n        clearSuggestions();\n\n        const results = await getGeocode({address});\n        const {lat, lng} = await getLatLng(results[0]);\n        setSelected({lat, lng});\n        \n    }\n\n    return (\n        <Combobox onSelect={handleSelect}>\n            <ComboboxInput \n            value={value} \n            onChange= {(e) => setValue(e.target.value)} \n            disabled={!ready}\n            className=\"combobox-input\" \n            placeholder=\"Search an address\"\n            />\n            <ComboboxPopover>\n                <ComboboxList>\n                    {status === \"OK\" && \n                    data.map(({ place_id, description}) => (\n                        <ComboboxOption key={place_id} value = {description}/>\n                    ))}\n                </ComboboxList>\n            </ComboboxPopover>\n        </Combobox>\n        \n    );\n}\n\n\nexport default Maps;","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/Home/Home.jsx",["69"],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/ProfilePage/index.jsx",["70"],"import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport \"./style.css\";\nimport StarRating from \"../StarRating/index.jsx\";\nimport PostImage from \"../PostImage/index.jsx\";\nimport Navbar from \"../Navbar/index.jsx\";\nimport API from \"../API\";\nimport { Autocomplete, TextField } from '@mui/material';\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\n\nconst ProfilePage = () => {\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [friends, setFriends] = useState([]);\n  const [allUsers, setAllUsers] = useState([]);\n  const current_user = localStorage.getItem('user');\n\n  const handleAddClick = async (user_selected) => {\n    if (user.friends.includes(user_selected.id)) {\n      return; // If the user is the current user or the user is already a friend, do nothing.\n    }\n  \n    try {\n      const updatedUser = { ...user, friends: [...user.friends, user_selected.id] };\n      const new_user = await API.updateUser(current_user, updatedUser); // Call an API to update the user's friend list in the database.\n      setFriends(new_user.data.friends);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const userResponse = await API.getUser(current_user);\n        const postResponse = await API.getPosts();\n        const allUsersResponse = await API.getUsers();\n\n        setUser(userResponse.data);\n        setPosts(postResponse.data);\n        for (let friend of userResponse.data.friends){\n            const friend_response = await API.getUser(friend);\n            setFriends(friends => friends.concat(friend_response.data));\n        }\n        setAllUsers(allUsersResponse.data.filter(user => user._id !== current_user).map(\n          user => ({ id: user._id, label: user.username })));\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setLoading(false);\n        setUser(null);\n      }\n    }\n    if (!current_user) return navigate(\"/\");\n    fetchData();\n    return () => {\n      setAllUsers([]);\n    };\n  }, []);\n\n  // Get the total number of stars for all the posts; total is the accumulator; post is object in array; 0 is initial value\n  const userPosts = posts.filter(post => post.username === user._id);\n  const totalStars = userPosts.reduce((total, post) => total + post.stars, 0);\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container\">\n        <div className=\"left-side\">\n          <div className=\"user-info\">\n            {loading ? ( // check if data is still loading\n              <p>Loading user...</p>\n            ) : user ? (\n              <>\n                <Avatar sx={{width: 100, height: 100, marginRight: \"10%\"}} alt={user.username} src={user.image} />\n                <div className=\"user-details\">\n                  <h2 className=\"name\">{user.username}</h2>\n                  <Autocomplete\n                    disablePortal\n                    id=\"combo-box-demo\"\n                    options={allUsers}\n                    sx={{ width: 200 }}\n                    onChange={(event, newValue) => {\n                      handleAddClick(newValue);\n                    }}\n                    renderInput={(params) => <TextField {...params} label=\"Add Friends\" />}\n                  />\n                  <p className=\"posts\">Number of posts: {userPosts.length}</p>\n                  <StarRating totalPosts={userPosts.length} totalStars={totalStars} />\n                </div>\n              </>\n            ) : (\n              <p>No user found</p>\n            )}\n          </div>\n          <div className=\"friends-list\">\n            <h2>Friends</h2>\n            {friends.length > 0 ? (\n              <List>\n                {friends.map((friend) => {\n                  return (\n                    <ListItem key={friend._id}>\n                      <ListItemAvatar>\n                        <Avatar alt={friend.username} src={friend.image} />\n                      </ListItemAvatar>\n                      <ListItemText primary={friend.username} />\n                    </ListItem>\n                  );\n                })}\n              </List>\n            ) : (\n              <p>No friends to display</p>\n            )}\n          </div>\n        </div>\n        <div className=\"right-side\">\n          <div className=\"timeline\">\n            <h2>Timeline</h2>\n            <div className=\"post-container\">\n              {userPosts.length > 0 ? (\n                userPosts.map((post) => (\n                  <div className=\"post\" key={post._id}>\n                    <PostImage image={post.image} />\n                  </div>\n                ))\n              ) : (\n                <p>No posts to display</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n","/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/RestaurantPage/index.jsx",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/API.js",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/Navbar/index.jsx",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/StarRating/index.jsx",[],"/Users/hurricane/Desktop/Coding_Projects/wi23-hack-team-1/client/src/PostImage/index.jsx",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":9,"column":8,"nodeType":"77","messageId":"78","endLine":9,"endColumn":12},{"ruleId":"79","severity":1,"message":"80","line":66,"column":6,"nodeType":"81","endLine":66,"endColumn":22,"suggestions":"82"},{"ruleId":"75","severity":1,"message":"83","line":78,"column":15,"nodeType":"77","messageId":"78","endLine":78,"endColumn":26},{"ruleId":"75","severity":1,"message":"84","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":17},{"ruleId":"79","severity":1,"message":"85","line":38,"column":8,"nodeType":"81","endLine":38,"endColumn":24,"suggestions":"86"},{"ruleId":"79","severity":1,"message":"87","line":43,"column":8,"nodeType":"81","endLine":43,"endColumn":10,"suggestions":"88"},{"ruleId":"79","severity":1,"message":"89","line":65,"column":6,"nodeType":"81","endLine":65,"endColumn":8,"suggestions":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'Maps' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'description', 'navigate', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["93"],"'file_upload' is assigned a value but never used.","'useMemo' is defined but never used.","React Hook useEffect has a missing dependency: 'markers'. Either include it or remove the dependency array.",["94"],"React Hook useEffect has missing dependencies: 'navigate' and 'user'. Either include them or remove the dependency array.",["95"],"React Hook useEffect has missing dependencies: 'current_user' and 'navigate'. Either include them or remove the dependency array.",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [name, location, user, navigate, description]",{"range":"105","text":"106"},"Update the dependencies array to be: [markers, props.selected]",{"range":"107","text":"108"},"Update the dependencies array to be: [navigate, user]",{"range":"109","text":"110"},"Update the dependencies array to be: [current_user, navigate]",{"range":"111","text":"112"},[2513,2529],"[name, location, user, navigate, description]",[1156,1172],"[markers, props.selected]",[1665,1667],"[navigate, user]",[2388,2390],"[current_user, navigate]"]