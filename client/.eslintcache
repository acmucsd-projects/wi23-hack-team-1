[{"/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/index.js":"1","/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/App.js":"2","/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/reportWebVitals.js":"3","/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/signupPage/signupPage.jsx":"4","/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/Login/Login.jsx":"5","/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/Home/Home.jsx":"6","/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/Post/Post.jsx":"7","/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/Maps/Maps.jsx":"8","/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/ProfilePage/index.jsx":"9","/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/StarRating/index.jsx":"10","/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/PostImage/index.jsx":"11","/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/Navbar/index.jsx":"12"},{"size":720,"mtime":1680209829515,"results":"13","hashOfConfig":"14"},{"size":900,"mtime":1680210021404,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1676074119566,"results":"16","hashOfConfig":"14"},{"size":3431,"mtime":1677358092100,"results":"17","hashOfConfig":"14"},{"size":3415,"mtime":1680209829496,"results":"18","hashOfConfig":"14"},{"size":389,"mtime":1677361518819,"results":"19","hashOfConfig":"14"},{"size":1889,"mtime":1677361518820,"results":"20","hashOfConfig":"14"},{"size":2979,"mtime":1680209824845,"results":"21","hashOfConfig":"14"},{"size":1875,"mtime":1677358867372,"results":"22","hashOfConfig":"14"},{"size":794,"mtime":1677358867373,"results":"23","hashOfConfig":"14"},{"size":437,"mtime":1677358867372,"results":"24","hashOfConfig":"14"},{"size":1658,"mtime":1677358867371,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pommh0",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/index.js",[],"/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/App.js",["55","56","57","58","59"],"import './App.css';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Login from \"./Login/Login\";\nimport SignupPage from './signupPage/signupPage';\nimport Home from \"./Home/Home\";\nimport Post from \"./Post/Post\";\nimport ProfilePage from \"./ProfilePage\";\nimport Maps from \"./Maps/Maps\"\nrequire('dotenv').config()\n\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Routes>\n        <Route exact path = \"/\" element = {<Maps />} />\n        {/*<Route exact path=\"/\" element={<SignupPage />} />\n        <Route exact path=\"/\" element={<Login />} />\n        <Route exact path=\"/signup\" element={<SignupPage />} />\n        <Route exact path=\"/home\" element={<Home />} />\n        <Route exact path=\"/post\" element={<Post />} />\n  <Route path=\"/profile\" element={<ProfilePage />} /> */}\n      </Routes>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/reportWebVitals.js",[],["60","61"],"/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/signupPage/signupPage.jsx",[],"/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/Login/Login.jsx",["62"],"import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport restaurant from '../restaurant.jpeg';\nimport FoodBankOutlinedIcon from '@mui/icons-material/FoodBankOutlined';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { Button, TextField, FormControl, OutlinedInput, \nInputLabel, InputAdornment, IconButton } from '@mui/material';\nimport { GoogleLogin } from '@react-oauth/google';\nimport jwtDecode from 'jwt-decode';\nimport \"./Login.css\";\n\nfunction Login() {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n  const navigate = useNavigate();\n  return (\n    <form>\n        <div className=\"food_image\">\n        <img src={restaurant} alt=\"Logo\" />\n        </div>\n        <div className=\"login\">\n          <div className='title'>\n          <FoodBankOutlinedIcon sx={{ fontSize: \"10rem\" }}></FoodBankOutlinedIcon>\n          <h1 id=\"app_name\">IGFood</h1>\n          </div>\n          <div className=\"google_login\">\n          <GoogleLogin\n          onSuccess={credentialResponse => {\n            if (credentialResponse.credential != null) {\n              const USER = jwtDecode(credentialResponse.credential);\n              setName(USER.name);\n              setEmail(USER.email);\n              navigate(\"/home\")\n            }\n          }}\n          onError={() => {\n            console.log('Login Failed');\n          }}\n        />\n        </div>\n          <h4 id=\"or\">or</h4>\n          <div className=\"form-group\">\n              <TextField id=\"outlined-basic\" sx={{ width: \"60%\", backgroundColor: \"#F5F5F5\" }} \n              label=\"Email Address\" variant=\"outlined\"\n              value={email} onChange={(e) => setEmail(e.target.value)}/>\n          </div>\n          <div className=\"form-group\">\n            <FormControl sx={{ m: 1, width: \"60%\", backgroundColor: \"#F5F5F5\" }} variant=\"outlined\">\n              <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password\"\n                type={showPassword ? 'text' : 'password'}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                    >\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                label=\"Password\"\n                value={password} onChange={(e) => setPassword(e.target.value)}\n              />\n            </FormControl>\n          </div>\n          <Button id=\"sign_in_bttn\" variant=\"contained\" onClick={() => navigate(\"/home\")}>Sign In</Button>\n          <div className=\"register_account\">\n            Don't have an account? <Link id=\"sign_up\" to=\"/signup\">Sign up now</Link>\n          </div>\n      </div>\n    </form>\n  );\n}\nexport default Login;","/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/Home/Home.jsx",[],"/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/Post/Post.jsx",[],"/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/Maps/Maps.jsx",["63"],"import { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\"\nimport { useMemo, useState } from \"react\";\n\n\n//does heavy lifting of talking w API\nimport usePlacesAutocomplete, {\n    getGeocode,\n    getLatLng,\n} from \"use-places-autocomplete\";\n\n//display results and read user input\nimport {\n    Combobox,\n    ComboboxInput,\n    ComboboxPopover,\n    ComboboxList,\n    ComboboxOption,\n} from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\"\n\nimport \"./Maps.css\"\n\nrequire('dotenv').config({path: '../.env'});\n\nconst Maps = () => {\n    console.log(process.env.GOOGLE_MAPS_API_KEY)\n    const {isLoaded} = useLoadScript({\n        googleMapsApiKey: \"AIzaSyBWbuhxOXD56F23tTIgml8j_pYDfkO5NAQ\",\n        libraries: [\"places\"],\n    });\n    console.log(isLoaded)\n    if(!isLoaded) return <div>Loading...</div>\n    return <Map/>\n};\n\n\n\nfunction Map() {\n    //will always recenter (recalculate) to this point every new render if dont use \"useMemo\"\n    //useMemo makes it so that only recalculates this value once every dependency(empty array, so no dependenciy so no recalculate) \n    //could also just pull \"center\" outside of \"Map\" component\n    const center = useMemo( () => ({lat: 44, lng: -80}), []); \n    const [selected, setSelected] = useState({\n        lat: 32.8801,\n        lng: -117.2340,\n      });\n\n    //\"Marker\" adds pins at lat/lng\n    console.log(selected.lat);\n    return (\n        <>\n            <div className=\"places-container\">\n                <PlacesAutocomplete setSelected={setSelected} />\n            </div>\n\n            <GoogleMap zoom={15} center={{lat: selected.lat, lng:selected.lng}} mapContainerClassName=\"map-container\">\n                {selected && <Marker position={selected}/>}\n            </GoogleMap>\n        </>\n    );\n}\n\n//majority of work done here in the autocomplete function\nconst PlacesAutocomplete = ({ setSelected }) => {\n    const {\n        ready,\n        value,\n        setValue,\n        suggestions: {status, data},\n        clearSuggestions,\n    } = usePlacesAutocomplete();\n\n    const handleSelect = async (address) => {\n        setValue(address, false);\n        clearSuggestions();\n\n        const results = await getGeocode({address});\n        const {lat, lng} = await getLatLng(results[0]);\n        setSelected({lat, lng});\n        \n    }\n\n    return (\n        <Combobox onSelect={handleSelect}>\n            <ComboboxInput \n            value={value} \n            onChange= {(e) => setValue(e.target.value)} \n            disabled={!ready}\n            className=\"combobox-input\" \n            placeholder=\"Search an address\"\n            />\n            <ComboboxPopover>\n                <ComboboxList>\n                    {status === \"OK\" && \n                    data.map(({ place_id, description}) => (\n                        <ComboboxOption key={place_id} value = {description}/>\n                    ))}\n                </ComboboxList>\n            </ComboboxPopover>\n        </Combobox>\n        \n    );\n}\n\n\nexport default Maps;","/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/ProfilePage/index.jsx",["64"],"import React from \"react\";\nimport \"./style.css\";\nimport StarRating from \"../StarRating/index.jsx\";\nimport PostImage from \"../PostImage/index.jsx\";\n\nconst ProfilePage = (props) => {\n  return (\n    <div className=\"container\">\n      <div className=\"left-side\">\n        <div className=\"user-info\">\n          <img\n            src=\"https://i.redd.it/6bz2c53fbyo31.jpg\"\n            alt=\"User's Profile Picture\"\n            className=\"profile-picture\"\n          />\n          <div className=\"user-details\">\n            <h2 className=\"name\">John Doe</h2>\n            <p className=\"posts\">Number of posts: 200</p>\n            <StarRating numStars={props.numStars} /> {/* will be replaced with average star rating */}\n          </div>\n        </div>\n        <div className=\"friends-list\">\n          <h2>Friends</h2>\n          <ul>\n            <li>Jane Doe</li>\n            <li>Jane Doe</li>\n            <li>Jane Doe</li>\n            <li>Jane Doe</li>\n            <li>Jane Doe</li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"right-side\">\n        <div className=\"timeline\">\n          <h2>Timeline</h2>\n          <div className=\"post-container\">\n            <div className=\"post\">\n              <PostImage image=\"https://i.redd.it/6bz2c53fbyo31.jpg\" link=\"https://www.youtube.com\" />\n            </div>\n            <div className=\"post\">\n              <PostImage image=\"https://i.redd.it/6bz2c53fbyo31.jpg\" link=\"https://www.youtube.com\" />\n            </div>\n            <div className=\"post\">\n              <PostImage image=\"https://i.redd.it/6bz2c53fbyo31.jpg\" link=\"https://www.youtube.com\" />\n            </div>\n            <div className=\"post\">\n              <PostImage image=\"https://i.redd.it/6bz2c53fbyo31.jpg\" link=\"https://www.youtube.com\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n","/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/StarRating/index.jsx",[],"/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/PostImage/index.jsx",[],"/Users/kinan/Desktop/ACMProjects/wi23-hack-team-1/client/src/Navbar/index.jsx",[],{"ruleId":"65","severity":1,"message":"66","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":13},{"ruleId":"65","severity":1,"message":"69","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":18},{"ruleId":"65","severity":1,"message":"70","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":12},{"ruleId":"65","severity":1,"message":"71","line":6,"column":8,"nodeType":"67","messageId":"68","endLine":6,"endColumn":12},{"ruleId":"65","severity":1,"message":"72","line":7,"column":8,"nodeType":"67","messageId":"68","endLine":7,"endColumn":19},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"65","severity":1,"message":"77","line":14,"column":10,"nodeType":"67","messageId":"68","endLine":14,"endColumn":14},{"ruleId":"65","severity":1,"message":"78","line":42,"column":11,"nodeType":"67","messageId":"68","endLine":42,"endColumn":17},{"ruleId":"79","severity":1,"message":"80","line":11,"column":11,"nodeType":"81","endLine":15,"endColumn":13},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'SignupPage' is defined but never used.","'Home' is defined but never used.","'Post' is defined but never used.","'ProfilePage' is defined but never used.","no-native-reassign",["82"],"no-negated-in-lhs",["83"],"'name' is assigned a value but never used.","'center' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]